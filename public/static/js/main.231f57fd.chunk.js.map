{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","actions/ui.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventLoaded","eventUpdated","eventDeleted","eventClearActiveEvent","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","onClick","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","CalendarEvent","AddNewFab","icon","faPlus","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.231f57fd.chunk.js","sourcesContent":["export const types = {\r\n\r\n    //MODAL\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    //EVENT TO SHOW\r\n    eventSetActive: '[event] Set Active',\r\n    \r\n    eventLogout: '[event] Logout event',\r\n    \r\n    //CRUD\r\n    eventLoaded: '[event] Events loaded', //read\r\n    evetStartAddNew: '[event] Start add new',//create\r\n    eventAddNew: '[event] Add new',\r\n    eventUpdated: '[event] Event updated',//update\r\n    eventDeleted: '[event] Event deleted',//delete\r\n\r\n    //auth\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n    eventClearActiveEvent: '[event] Clear active event',//CLEAN EVENS FROM STORE\r\n    \r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload, //uid, name\r\n                checking: false \r\n            }\r\n    \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: 'askdjhaksdjas',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Jonathan'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,//previous events\r\n                    action.payload //new event\r\n                ]\r\n            }\r\n    \r\n        //deactivate the active note\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )//delete by active note \r\n                ),\r\n                activeEvent: null //due to was activated\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ] //..spread all events\r\n            }\r\n        \r\n        \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState //CLEAN EVENTS GO TO THE DEFAULT STATE  ↑\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nimport { uiReducer } from './uiReducer';\r\n\r\n//Combine reducers\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n//combined reducers\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n// to use dev tools\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","const baseUrl = process.env.REACT_APP_API_URL; //server\r\n\r\n\r\n//Without token\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {//POST/DELETE/PUT\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n//with Tokens\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || ''; //get token from localStorage\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token \r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n            //iterate each event\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(), //convert string to date\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\n\r\n\r\n        /****       ADD NEW EVENT         ****/\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        //getSatate to get data from storage(redux)\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n                                            //endpoint,parms/Method\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                //add data from user to event\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n            /** GET EVENTS FROM DATABASE**/\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n                            //CHANGE string date to date \r\n            const events = prepareEvents( body.eventos );\r\n\r\n\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n            /** UPDATE EVENT**/\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n            /** DELETE  EVENT**/\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n        //GET event from store wich is active\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\n\r\n            /** SET/CLEAR  EVENT ACTIVE**/\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n     type: types.eventClearActiveEvent \r\n});\r\n\r\n//CLEAN EVENTS \r\nexport const eventLogout =() => ({ type: types.eventLogout });\r\n","import { fetchSinToken, fetchConToken } from '../helpers/fetch'\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from './events';\r\n\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );//FETCH\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) { //SUCCESS also we can use resp.ok\r\n            localStorage.setItem('token', body.token );//Save TOken en localStorage\r\n            localStorage.setItem('token-init-date', new Date().getTime() ); //time when was create the token \r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear(); \r\n        dispatch( eventLogout() );//cleand events from store\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //Login\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: \"jona@gmail.com\",\r\n    lPassword: \"123456\",\r\n  });\r\n\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  //Register\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: \"Jona\",\r\n    rEmail: \"jona@gmail.com\",\r\n    rPassword1: \"123456\",\r\n    rPassword2: \"123456\",\r\n  });\r\n\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword1 !== rPassword2) { \r\n      return Swal.fire(\r\n        \"Error\",\r\n        \"Las contraseñas deben de ser iguales\",\r\n        \"error\"\r\n      );\r\n    }\r\n    dispatch(startRegister(rEmail, rPassword1, rName));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword1\"\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n\r\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment\"; \r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate, eventUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n\tcontent: {\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tright: 'auto',\r\n\t\tbottom: 'auto',\r\n\t\tmarginRight: '-50%',\r\n\t\ttransform: 'translate(-50%, -50%)',\r\n\t},\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now= moment().minutes(0).seconds(0).add(1, 'hours');\r\n\r\nconst nowPlus1 =now.clone().add(1, 'hours')\r\n\r\nconst initEvent = {\r\n    title: 'note',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());    \r\n\tconst [dateEnd, setDateEnd] = useState(nowPlus1.toDate()); \r\n\tconst [titleValid, setTitleValid] = useState(true) \r\n\tconst [formValues, setFormValues] = useState( initEvent );\r\n\r\n\tconst {notes,title, start, end} = formValues;\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\t\tconst momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\t\t//compering dates \r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n\t\t\treturn Swal.fire('Error','The end date must be greater than the start date', 'error');\r\n\t\t}\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {//if there is a a activeEvent\r\n            dispatch( eventStartUpdate( formValues ) ) //update\r\n        } else {//otherwise create one\r\n            dispatch( eventStartAddNew(formValues));\r\n        }\r\n\r\n\t\tsetTitleValid(true); //the title is valid\r\n\t\tcloseModal();\r\n\t\tconsole.log(formValues)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //Due to first time activeEvent is null we check because we can not set to form values in null\r\n        if ( activeEvent ) {//each time when we set activeEvent by clicking(two times) on the note\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n\tconst handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    const handleStartDateChange = (e) => {\r\n\t\tsetDateStart(e);\r\n\t\tsetFormValues({\r\n\t\t\t...formValues,\r\n\t\t\tstart:e\r\n\t\t})\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n\t\tsetDateEnd(e);\r\n\t\tsetFormValues({\r\n\t\t\t...formValues,\r\n\t\t\tend:e\r\n\t\t})\r\n    }\r\n\tconst closeModal = () => {\r\n        dispatch(uiCloseModal()); //close modal\r\n        dispatch(eventClearActiveEvent());//quit active note \r\n        setFormValues(initEvent);//reset form\r\n\t};\r\n\r\n\treturn (\r\n        <Modal\r\n        isOpen={ modalOpen }\r\n        onRequestClose={ closeModal }\r\n        style={ customStyles }\r\n        closeTimeoutMS={ 200 }\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-background\"\r\n      >\r\n            <h1>{activeEvent ? 'Update Note': 'New Note'}</h1>\r\n          <hr />\r\n          <form\r\n              className=\"container\"\r\n              onSubmit={ handleSubmitForm }\r\n          >\r\n\r\n              <div className=\"form-group\">\r\n                  <label>Fecha y hora inicio</label>\r\n                  <DateTimePicker\r\n                      onChange={ handleStartDateChange }\r\n                      value={ dateStart }\r\n                      className=\"form-control\"\r\n                  />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <label>Fecha y hora fin</label>\r\n                  <DateTimePicker\r\n                      onChange={ handleEndDateChange }\r\n                      value={ dateEnd }\r\n                      minDate={ dateStart }\r\n                      className=\"form-control\"\r\n                  />\r\n              </div>\r\n\r\n              <hr />\r\n              <div className=\"form-group\">\r\n                  <label>Titulo y notas</label>\r\n                  <input\r\n                      type=\"text\"\r\n                      className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n                      placeholder=\"Título del evento\"\r\n                      name=\"title\"\r\n                      autoComplete=\"off\"\r\n                      value={ title }\r\n                      onChange={ handleInputChange }\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <textarea\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Notas\"\r\n                      rows=\"5\"\r\n                      name=\"notes\"\r\n                      value={ notes }\r\n                      onChange={ handleInputChange }\r\n                  ></textarea>\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n              </div>\r\n\r\n              <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-outline-primary btn-block\"\r\n              >\r\n                  <i className=\"far fa-save\"></i>\r\n                  <span> Save</span>\r\n              </button>\r\n\r\n          </form>\r\n\r\n      </Modal>\r\n\t);\r\n};\r\n","\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, name } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport {  eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete event </span>\r\n        </button>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'; //styles for calander\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es'); //configure to spanish moment\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n\t//get events from store\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n\t//get user from store\r\n\tconst { uid } = useSelector( state => state.auth );\r\n\r\n\r\n\t//in order to save the view if the user reload page\r\n\tconst [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\tconst dispatch = useDispatch();\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t//GET EVENTS\r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n\r\n\r\n\t//this events are from BigCalendar\r\n\tconst onDoubleClick = (e) => {\r\n\t\tdispatch( uiOpenModal() );  //to open modal\r\n\t\t\r\n\t};\r\n\r\n\tconst onSelectEvent = (e) => {\r\n\t//\tconsole.log(e);\r\n\t\tdispatch( eventSetActive( e ) );\r\n\t};\r\n\r\n\tconst onViewChange = (e) => {\r\n\t\tsetLastView(e);\r\n\t\tlocalStorage.setItem('lastView', e);\r\n\t};\r\n\r\n\tconst onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() ); //clear event active\r\n    }\r\n\r\n\t//Styles for the events\r\n\tconst eventStyleGetter = (event, start, end, isSelected) => {\r\n\t\tconst style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660', //if the user is the ow ner event we set a blue color\r\n\t\t\tborderRadius: '0px',\r\n\t\t\topacity: 0.8,\r\n\t\t\tdisplay: 'block',\r\n\t\t\tcolor: 'white',\r\n\t\t};\r\n\t\treturn {\r\n\t\t\tstyle,\r\n\t\t};\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"calendar-screen\">\r\n\t\t\t<Navbar />\r\n\r\n\t\t\t<Calendar\r\n\t\t\t\tlocalizer={localizer}\r\n\t\t\t\tevents={events}\r\n\t\t\t\tstartAccessor=\"start\"\r\n\t\t\t\tendAccessor=\"end\"\r\n\t\t\t\tstyle={{ height: 500 }}\r\n\t\t\t\tmessages={messages}\r\n\t\t\t\teventPropGetter={eventStyleGetter}\r\n\t\t\t\tonDoubleClickEvent={onDoubleClick}\r\n\t\t\t\tonSelectEvent={onSelectEvent}\r\n\t\t\t\tonView={onViewChange}\r\n\t\t\t\tonSelectSlot={onSelectSlot}\r\n\t\t\t\tselectable={true}\r\n\t\t\t\tview={lastView}\r\n\t\t\t\tcomponents={{ event: CalendarEvent }}\r\n\t\t\t/>\r\n\t\t\t\t<AddNewFab />\r\n            {/*if there is a active note we show the component delete (button) */}\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            <CalendarModal/>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth); //get from storage\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);//startChecking don ues as dependency because is outside the component\r\n\r\n  if (checking) {\r\n    return <h5>Espere...</h5>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path=\"/login\"\r\n            component={LoginScreen}\r\n            isAuthenticated={!!uid} // example !('sf5455dff') = false /  !!('sf5455dff') = true\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","\r\nimport ReactDom from 'react-dom'\r\nimport { CalendarApp } from './CalendarApp'\r\nimport './styles/styles.css';\r\n\r\n\r\nReactDom.render(<CalendarApp/>,document.getElementById('root'))\r\n "],"sourceRoot":""}